{"version":3,"sources":["Components/Header.js","Components/Table.js","Components/Form.js","Components/Bottom.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Table","props","salary","parseInt","exp","stateComIns","dzpo","zo","comInsPayment","doo","labourExp","summedGross","insuranceIncome","flatIncomeTax","Math","round","compensation","netSalary","Form","state","displayTable","errors","e","this","setState","Object","defineProperty","target","name","value","event","test","preventDefault","_this2","_this$state","id","type","placeholder","onChange","handleChange","required","pattern","title","min","max","onClick","handleClick","Components_Table","Component","Bottom","App","Fragment","Components_Header","Components_Form","Components_Bottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a56cce5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return <div className=\"Header\" />;\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Table = props => {\n  const salary = parseInt(props.salary);\n  const exp = parseInt(props.exp);\n\n  //logic\n  const stateComIns = salary <= 3000 ? salary * 0.0838 : 3000 * 0.0838;\n  const dzpo = salary <= 3000 ? salary * 0.022 : 3000 * 0.022;\n  const zo = salary <= 3000 ? salary * 0.032 : 3000 * 0.032;\n  const comInsPayment = stateComIns + dzpo + zo;\n  const doo = salary + exp * 0.006 * salary - comInsPayment;\n  const labourExp = exp * 0.006 * salary;\n  const summedGross = salary + labourExp;\n  const insuranceIncome = summedGross <= 3000 ? summedGross : 3000;\n\n  const flatIncomeTax = Math.round(doo * 0.1 * 100) / 100;\n  const compensation = Math.round((comInsPayment + doo * 0.1) * 100) / 100;\n  const netSalary = Math.round((salary + exp * 0.006 * salary - (comInsPayment + doo * 0.1)) * 100) / 100;\n\n  return (\n    <div className=\"displayPool\">\n      <table>\n        <tbody>\n          <tr>\n            <td>1. Брутно възнаграждение:</td>\n            <td>\n              <label>{salary} </label>\n            </td>\n          </tr>\n          <tr>\n            <td>2. Трудов стаж X*0.6%:</td>\n            <td>\n              <label>{Math.round(labourExp * 100) / 100} </label>\n            </td>\n          </tr>\n          <tr>\n            <td>3. Сумарно(1+2):</td>\n            <td>\n              <label> {summedGross}</label>\n            </td>\n          </tr>\n          <tr>\n            <td>4. Осигурителен доход:</td>\n            <td>\n              <label>{insuranceIncome} </label>\n            </td>\n          </tr>\n          <tr>\n            <td>5. Държавно общ. осиг.(\"Пенсии\": 6.58%,\"ОЗМ\": 1.4%,\"Безработица\": 0.4%):</td>\n            <td>\n              <label>{Math.round(stateComIns * 100) / 100}</label>\n            </td>\n          </tr>\n          <tr>\n            <td>6. Фонд ДЗПО в УПФ 2.20%:</td>\n            <td>\n              <label> {Math.round(dzpo * 100) / 100}</label>\n            </td>\n          </tr>\n          <tr>\n            <td>7. Здравно осигуряване 3.20%:</td>\n            <td>\n              <label>{zo} </label>\n            </td>\n          </tr>\n          <tr>\n            <td>8. Общо осиг. вноски(5+6+7):</td>\n            <td>\n              <label>{Math.round(comInsPayment * 100) / 100}</label>\n            </td>\n          </tr>\n          <tr>\n            <td>9. Данъчна основа за облагане(3-8):</td>\n            <td>\n              <label>{Math.round(doo * 100) / 100}</label>\n            </td>\n          </tr>\n          <tr>\n            <td>10. Данък доход (9*10%):</td>\n            <td>\n              <label>{flatIncomeTax} </label>\n            </td>\n          </tr>\n          <tr>\n            <td>11. Общо удръжки служител (8+10):</td>\n            <td>\n              <label>{compensation}</label>\n            </td>\n          </tr>\n          <tr>\n            <td>12. Нетно(3-11):</td>\n            <td>\n              <label>{netSalary} </label>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { Component } from 'react';\nimport Table from './Table';\n\nclass Form extends Component {\n  state = {\n    displayTable: false,\n    salary: 0,\n    exp: 0,\n    errors: {\n      salary: 'Invalid value',\n      exp: 'Invalid value'\n    }\n  };\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleClick(event) {\n    if (/^[0-9]+$/g.test(this.state.salary) && /^[0-9]+$/g.test(this.state.exp)) {\n      this.setState({\n        displayTable: true\n      });\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    const { displayTable, salary, exp } = this.state;\n\n    return (\n      <form name=\"calcForm\">\n        <fieldset>\n          <legend>Калкулатор брутно/нетно възнаграждение:</legend>\n          <label>\n            Брутно възнаграждение:\n            <input\n              name=\"salary\"\n              id=\"salaryGross\"\n              type=\"number\"\n              placeholder=\"amount\"\n              value={this.state.salary}\n              onChange={e => this.handleChange(e)}\n              required=\"required\"\n              pattern=\"[0-9]*\"\n              title=\"Please enter a valid number\"\n            />\n            <span className=\"err1\">{!/^[0-9]+$/g.test(this.state.salary) && this.state.errors.salary}</span>\n          </label>\n\n          <label>\n            Години трудов стаж:\n            <input\n              name=\"exp\"\n              id=\"yearsExp\"\n              type=\"number\"\n              placeholder=\"amount\"\n              value={this.state.exp}\n              onChange={e => this.handleChange(e)}\n              required=\"required\"\n              pattern=\"[0-9]*\"\n              title=\"Please enter a valid number\"\n              min=\"1\"\n              max=\"35\"\n            />\n            <span className=\"err2\">{!/^[0-9]+$/g.test(this.state.exp) && this.state.errors.exp}</span>\n          </label>\n          <button type=\"button\" onClick={event => this.handleClick(event)}>\n            Calc!\n          </button>\n          <div className=\"displayPool\">{displayTable && <Table salary={salary} exp={exp} />}</div>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Bottom = () => {\n  return (\n    <div className=\"bottom\">\n      <p>Този калкулатор е само за родените след 1960г. и III категория труд</p>\n    </div>\n  );\n};\n\nexport default Bottom;\n","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport Form from './Components/Form';\nimport Bottom from './Components/Bottom';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Form />\n        <Bottom />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}