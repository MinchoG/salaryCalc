{"version":3,"sources":["Components/Header.js","Components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","salaryGross","yearsExp","handleChange","bind","assertThisInitialized","handleClick","e","setState","defineProperty","target","name","value","salary","parseInt","exp","elemGross","document","getElementById","elemExp","elemSum12","grossFlat","elemDooId","elemDzpoId","elemZoId","elemSum567Id","elemId9","elemId10","elemId11","elemId12","x5","x6","x7","x8","x9","innerHTML","type","placeholder","onChange","onClick","id","Component","App","Fragment","Components_Header","Components_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b3b6d37.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <span>123</span>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { salaryGross: '', yearsExp: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleClick() {\n    const salary = parseInt(this.state.salaryGross, 10);\n    const exp = parseInt(this.state.yearsExp, 10);\n    //placeholders\n    const elemGross = document.getElementById('id1');\n    const elemExp = document.getElementById('id2');\n    const elemSum12 = document.getElementById('id3');\n    const grossFlat = document.getElementById('id4');\n    const elemDooId = document.getElementById('id5');\n    const elemDzpoId = document.getElementById('id6');\n    const elemZoId = document.getElementById('id7');\n    const elemSum567Id = document.getElementById('id8');\n    const elemId9 = document.getElementById('id9');\n    const elemId10 = document.getElementById('id10');\n    const elemId11 = document.getElementById('id11');\n    const elemId12 = document.getElementById('id12');\n\n    //logic\n    const x5 = salary <= 3000 ? salary * 0.0838 : 3000 * 0.0838;\n    const x6 = salary <= 3000 ? salary * 0.022 : 3000 * 0.022;\n    const x7 = salary <= 3000 ? salary * 0.032 : 3000 * 0.032;\n    const x8 = x5 + x6 + x7;\n    const x9 = salary + exp * 0.006 * salary - x8;\n\n    //output\n    elemGross.innerHTML = salary;\n    elemExp.innerHTML = exp * 0.006 * salary;\n    elemSum12.innerHTML = salary + exp * 0.006 * salary;\n    grossFlat.innerHTML = salary <= 3000 ? salary : 3000;\n    elemDooId.innerHTML = x5;\n    elemDzpoId.innerHTML = x6;\n    elemZoId.innerHTML = x7;\n    elemSum567Id.innerHTML = x8;\n    elemId9.innerHTML = x9;\n    elemId10.innerHTML = x9 * 0.1;\n    elemId11.innerHTML = x8 + x9 * 0.1;\n    elemId12.innerHTML = salary + exp * 0.006 * salary - (x8 + x9 * 0.1);\n\n    //elemSalary.innerHTML = salary <= 3000 ? salary + salary * exp * 0.006 : 3000 + salary * exp * 0.006 + salary - 3000;\n  }\n\n  render() {\n    return (\n      <form name=\"calcForm\">\n        <fieldset>\n          <legend>Калкулатор брутно/нетно възнаграждение:</legend>\n          <label>\n            Брутно възнаграждение: &nbsp;\n            <input name=\"salaryGross\" type=\"number\" value={this.state.value} placeholder=\"amount\" onChange={this.handleChange} />\n          </label>\n          <br />\n          <label>\n            Години трудов стаж: &nbsp;\n            <input name=\"yearsExp\" type=\"number\" value={this.state.value} placeholder=\"amount\" onChange={this.handleChange} />\n          </label>\n          <button type=\"button\" onClick={this.handleClick}>\n            Calc!\n          </button>\n          <br />\n          <div className=\"displayPool\">\n            <p>\n              1. Брутно възнаграждение:&nbsp; <label id=\"id1\"> </label>\n              <br />\n              2. Трудов стаж X*0.6%:&nbsp; <label id=\"id2\"> </label>\n              <br />\n              3. Сумарно(1+2):&nbsp; <label id=\"id3\"> </label>\n              <br />\n              4. Осигурителен доход: &nbsp;\n              <label id=\"id4\"> </label>\n              <br />\n              5. Държавно общ. осиг.(\"Пенсии\": 6.58%,\"ОЗМ\": 1.4%,\"Безработица\": 0.4%): &nbsp;\n              <label id=\"id5\"> </label>\n              <br />\n              6. Фонд ДЗПО в УПФ 2.20%: &nbsp;\n              <label id=\"id6\"> </label>\n              <br />\n              7. Здравно осигуряване 3.20%: &nbsp;\n              <label id=\"id7\"> </label>\n              <br />\n              8. Общо осиг. вноски(5+6+7): &nbsp;\n              <label id=\"id8\"> </label>\n              <br />\n              9. Данъчна основа за облагане(3-8): &nbsp;\n              <label id=\"id9\"> </label>\n              <br />\n              10. Данък доход (9*10%): &nbsp;\n              <label id=\"id10\"> </label>\n              <br />\n              11. Общо удръжки служител (8+10): &nbsp;\n              <label id=\"id11\"> </label>\n              <br />\n              12. Нетно(3-11): &nbsp;\n              <label id=\"id12\"> </label>\n              <br />\n            </p>\n          </div>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport Form from './Components/Form';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Form />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}